//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace AnalyzerStudies {
    using System;
    
    
    /// <summary>
    ///   ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
    /// </summary>
    // このクラスは StronglyTypedResourceBuilder クラスが ResGen
    // または Visual Studio のようなツールを使用して自動生成されました。
    // メンバーを追加または削除するには、.ResX ファイルを編集して、/str オプションと共に
    // ResGen を実行し直すか、または VS プロジェクトをビルドし直します。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AnalyzerStudies.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   すべてについて、現在のスレッドの CurrentUICulture プロパティをオーバーライドします
        ///   現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   If {0}.{1} method is not called on object before all references to it are out of scope on normal path, expected behavior will not be happen. Note that this analyzer does not check exceptional path because it should be covered by IDisposable or IAsyncDisposable and  standard .NET Analyzers rule CA2000. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string CompleteObjectsBeforeLosingScopeDescription {
            get {
                return ResourceManager.GetString("CompleteObjectsBeforeLosingScopeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Call {0}.{1} on object created by &apos;{{0}}&apos; before all references to it are out of scope に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string CompleteObjectsBeforeLosingScopeNotCompletedMessage {
            get {
                return ResourceManager.GetString("CompleteObjectsBeforeLosingScopeNotCompletedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Call {0}.{1} on objects before losing scope on normal path に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string CompleteObjectsBeforeLosingScopeTitle {
            get {
                return ResourceManager.GetString("CompleteObjectsBeforeLosingScopeTitle", resourceCulture);
            }
        }
    }
}
